<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>20</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>FileStream
--
std::string filename
--
FileStream(std::string)
unsigned char* readFile()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>240</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>OutputStream
--

--
void run(std::string)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>20</y>
      <w>420</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Process
--
Database db*
--
Process(Database&amp;)
process()
tuple&lt;char, string, string&gt; search(unsigned char)
std::string decrypt(unsigned char*)
std::string shift(std::string)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>20</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Database
--
unsigned char* encrypted
vector&lt;tuple&lt;char, std::string, std::string&gt; morseKey
--
Database(unsigned char*)
unsigned char* getEncrypted()
vector&lt;tuple&lt;char, std::string, std::string&gt; getMorseKey()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
